# .github/workflows/cd.yml

name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubernetes with Kind
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: kind

      - name: Load Docker images into Kind
        run: |
          chmod +x ./rebuild-and-redeploy.sh
          ./rebuild-and-redeploy.sh

      - name: Deploy services
        run: |
          chmod +x ./deploy-all.sh
          ./deploy-all.sh

      - name: Verify deployments are ready
        run: |
          kubectl rollout status deployment/inventory-service --timeout=120s
          kubectl rollout status deployment/notification-service --timeout=120s
          kubectl rollout status deployment/order-service --timeout=120s
          kubectl rollout status deployment/payment-service --timeout=120s
          kubectl rollout status deployment/product-service --timeout=120s
          kubectl rollout status deployment/recommendation-service --timeout=120s
          kubectl rollout status deployment/user-service --timeout=120s

      - name: Check health endpoints
        run: |
          declare -A SERVICE_PORTS=(
            ["inventory-service"]=8084
            ["notification-service"]=8086
            ["order-service"]=8083
            ["payment-service"]=8087
            ["product-service"]=8082
            ["recommendation-service"]=8085
            ["user-service"]=8081
          )

#          for SERVICE in "${!SERVICE_PORTS[@]}"; do
#            PORT=${SERVICE_PORTS[$SERVICE]}
#            POD=$(kubectl get pods -l app=$SERVICE -o jsonpath="{.items[0].metadata.name}")
#
#            echo "Checking /actuator/health for pod $POD of service $SERVICE on port $PORT..."
#
#            kubectl exec "$POD" -- curl -f http://$SERVICE:$PORT/actuator/health || {
#            echo "Health check failed for $SERVICE";
#            exit 1;
#          }

          for SERVICE in "${!SERVICE_PORTS[@]}"; do
            PORT=${SERVICE_PORTS[$SERVICE]}
            POD=$(kubectl get pods -l app=$SERVICE -o jsonpath="{.items[0].metadata.name}")
            CLUSTER_IP=$(kubectl get service $SERVICE -o jsonpath="{.spec.clusterIP}")
            
            echo "Checking /actuator/health for pod $POD of service $SERVICE on ClusterIP $CLUSTER_IP and port $PORT..."
            
            kubectl exec "$POD" -- curl -f http://$CLUSTER_IP:$PORT/actuator/health || {
            echo "Health check failed for $SERVICE";
            exit 1;
            }
          done

      - name: Finish
        run: echo "Deployment and health check completed successfully!"
